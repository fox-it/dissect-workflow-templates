name: Dissect Self Hosted CI Template
on:
  workflow_call:
    inputs:
      run-tests:
        required: false
        type: boolean
        default: true
      run_docs:
        required: false
        type: boolean
        default: true
      run-linting:
        required: false
        type: boolean
        default: true
      deb-packages:
        required: false
        type: string
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest-sh
    steps:
      - uses: fox-it/dissect-workflow-templates/.github/actions/git-checkout@main

      - uses: fox-it/dissect-workflow-templates/.github/actions/tox-run@main
        with:
          tox-environment: build

      - uses: actions/upload-artifact@v4
        with:
          name: packages
          path: dist/*
          retention-days: 1

  lint:
    needs: build
    runs-on: ubuntu-latest-sh
    if: ${{ inputs.run-linting == true }}

    steps:
      - uses: fox-it/dissect-workflow-templates/.github/actions/git-checkout@main

      - uses: fox-it/dissect-workflow-templates/.github/actions/tox-run@main
        with:
          tox-environment: lint

  docs-build:
    needs: build
    runs-on: ubuntu-latest-sh
    if: ${{ inputs.run_docs == true}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create LFS file list
        run: git lfs ls-files --long | cut -d ' ' 0f1 | sort > .lfs-assets-id
      - name: Cache LFS
        uses: actions/cache@v4
        with:
          path: .git/lfs
          key: lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Pull LFS
        run: git lfs pull

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"
      - run: pip install "tox==4.4.3"
      - env:
          C_INCLUDE_PATH: ${{ env.pythonLocation }}/include/python3.9
        run: tox run -e docs-build 


  test:
    needs: build
    runs-on: ${{ matrix.os }}
    if: ${{ inputs.run-tests == true }}
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest-sh"]
        python-version: ["3.9", "pypy3.9", "pypy3.10", "3.10", "3.11", "3.12", "3.13"]
        include:
          - allow_failure: false
            tox-version: "4.2.4"
            include-prefix: "python"
          - python-version: "pypy3.9"
            include-prefix: ""
          - python-version: "pypy3.10"
            include-prefix: ""
            allow_failure: true
          - python-version: "3.12"
            allow_failure: true
          - python-version: "3.13"
            allow_failure: true
    steps:
      - if: ${{ inputs.deb-packages != '' && ! startsWith(matrix.os, 'windows') }}
        run: sudo apt-get install -qq ${{ inputs.deb-packages }}

      - uses: fox-it/dissect-workflow-templates/.github/actions/git-checkout@main

      - uses: fox-it/dissect-workflow-templates/.github/actions/tox-run@main
        with:
          tox-environment: ${{ matrix.python-version }}
          runner-os: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          include-prefix: ${{ matrix.include-prefix }}

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.DISSECT_CODECOV_TOKEN }}
          env_vars: PYTHON
          files: coverage.xml
          flags: unittests
          verbose: true

  publish:
    needs: [lint, test]
    if: ${{ github.ref_name == 'main' || github.ref_type == 'tag' }}
    runs-on: ubuntu-latest-sh
    environment: dissect_publish
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist/
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.DISSECT_PRIVATE_PYPI_USERNAME }}
          password: ${{ secrets.DISSECT_PRIVATE_PYPI_PASSWORD }}
          repository-url: ${{ secrets.DISSECT_PRIVATE_PYPI_REPOSITORY }}
